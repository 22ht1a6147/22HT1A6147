{"ast":null,"code":"/**\r\n * API wrappers for backend calls using axios.\r\n */\n\nimport axios from 'axios';\n\n// Base URL for backend API\n// Make sure your backend server is running on this port (backend/server.js).\nconst API_BASE = 'http://localhost:5000';\n\n// Create a new short URL\nexport async function createShortUrl(payload) {\n  // payload: { originalUrl, validity, shortcode }\n  try {\n    const response = await axios.post(`${API_BASE}/shorturls`, payload);\n    // Expect backend to return something like:\n    // { shortcode: \"abcd\", originalUrl: \"...\", expiry: \"...\", createdAt: \"...\", shortUrl: \"/abcd\" }\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    // normalize message\n    const msg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    console.error('Error creating short URL:', msg);\n    throw error;\n  }\n}\n\n// Get stats for a specific shortcode\nexport async function getStats(shortcode) {\n  try {\n    const response = await axios.get(`${API_BASE}/shorturls/${shortcode}`);\n    // Expect backend to return stats object\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    const msg = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    console.error('Error fetching stats:', msg);\n    throw error;\n  }\n}\n\n// Utility to build the public redirect URL that user clicks to be redirected.\n// This points to backend redirect route.\nexport function buildRedirectUrl(shortcode) {\n  return `http://localhost:5000/${shortcode}`;\n}","map":{"version":3,"names":["axios","API_BASE","createShortUrl","payload","response","post","data","error","_error$response","msg","message","console","getStats","shortcode","get","_error$response2","buildRedirectUrl"],"sources":["C:/Users/VENKATSAI/Desktop/FULL STACK PROJECT/url-shortener-microservice/frontend/src/services/api.js"],"sourcesContent":["/**\r\n * API wrappers for backend calls using axios.\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\n// Base URL for backend API\r\n// Make sure your backend server is running on this port (backend/server.js).\r\nconst API_BASE = 'http://localhost:5000';\r\n\r\n// Create a new short URL\r\nexport async function createShortUrl(payload) {\r\n  // payload: { originalUrl, validity, shortcode }\r\n  try {\r\n    const response = await axios.post(`${API_BASE}/shorturls`, payload);\r\n    // Expect backend to return something like:\r\n    // { shortcode: \"abcd\", originalUrl: \"...\", expiry: \"...\", createdAt: \"...\", shortUrl: \"/abcd\" }\r\n    return response.data;\r\n  } catch (error) {\r\n    // normalize message\r\n    const msg = error.response?.data || error.message;\r\n    console.error('Error creating short URL:', msg);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get stats for a specific shortcode\r\nexport async function getStats(shortcode) {\r\n  try {\r\n    const response = await axios.get(`${API_BASE}/shorturls/${shortcode}`);\r\n    // Expect backend to return stats object\r\n    return response.data;\r\n  } catch (error) {\r\n    const msg = error.response?.data || error.message;\r\n    console.error('Error fetching stats:', msg);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Utility to build the public redirect URL that user clicks to be redirected.\r\n// This points to backend redirect route.\r\nexport function buildRedirectUrl(shortcode) {\r\n  return `http://localhost:5000/${shortcode}`;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,eAAeC,cAAcA,CAACC,OAAO,EAAE;EAC5C;EACA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,QAAQ,YAAY,EAAEE,OAAO,CAAC;IACnE;IACA;IACA,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd;IACA,MAAMC,GAAG,GAAG,EAAAD,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO;IACjDC,OAAO,CAACJ,KAAK,CAAC,2BAA2B,EAAEE,GAAG,CAAC;IAC/C,MAAMF,KAAK;EACb;AACF;;AAEA;AACA,OAAO,eAAeK,QAAQA,CAACC,SAAS,EAAE;EACxC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAC,GAAGb,QAAQ,cAAcY,SAAS,EAAE,CAAC;IACtE;IACA,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA;IACd,MAAMN,GAAG,GAAG,EAAAM,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACG,OAAO;IACjDC,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEE,GAAG,CAAC;IAC3C,MAAMF,KAAK;EACb;AACF;;AAEA;AACA;AACA,OAAO,SAASS,gBAAgBA,CAACH,SAAS,EAAE;EAC1C,OAAO,yBAAyBA,SAAS,EAAE;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}