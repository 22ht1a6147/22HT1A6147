{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENKATSAI\\\\Desktop\\\\FULL STACK PROJECT\\\\url-shortener-microservice\\\\frontend\\\\src\\\\components\\\\UrlForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\r\n * A simple form with up to 5 rows.\r\n * Each row: longUrl, validity (minutes), shortcode (optional)\r\n *\r\n * IMPORTANT: Do NOT implement shortening on the client. Use the backend API at POST /shorturls.\r\n *\r\n * TODO: Hook this up to services/api.js to call backend. On success call props.onSuccess([...results])\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UrlForm({\n  onSuccess\n}) {\n  _s();\n  const initialRows = Array.from({\n    length: 5\n  }, () => ({\n    url: '',\n    validity: '',\n    shortcode: ''\n  }));\n  const [rows, setRows] = useState(initialRows);\n  const [loading, setLoading] = useState(false);\n  function handleChange(index, field, value) {\n    const copy = [...rows];\n    copy[index][field] = value;\n    setRows(copy);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // TODO: Validate client-side each row (use validators.js)\n      // TODO: send only filled rows to backend via services/api.js\n      // After successful responses, call onSuccess([...])\n      onSuccess([]); // placeholder: pass actual results after implementing\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [rows.map((r, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Long URL\",\n        value: r.url,\n        onChange: e => handleChange(i, 'url', e.target.value),\n        style: {\n          width: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"validity (minutes)\",\n        value: r.validity,\n        onChange: e => handleChange(i, 'validity', e.target.value),\n        style: {\n          width: 120,\n          marginLeft: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"preferred shortcode (optional)\",\n        value: r.shortcode,\n        onChange: e => handleChange(i, 'shortcode', e.target.value),\n        style: {\n          width: 160,\n          marginLeft: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: \"Shorten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(UrlForm, \"yY7j28kS+WJfYvRzHHlN7ydojf0=\");\n_c = UrlForm;\nvar _c;\n$RefreshReg$(_c, \"UrlForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UrlForm","onSuccess","_s","initialRows","Array","from","length","url","validity","shortcode","rows","setRows","loading","setLoading","handleChange","index","field","value","copy","handleSubmit","e","preventDefault","onSubmit","children","map","r","i","style","marginBottom","placeholder","onChange","target","width","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/VENKATSAI/Desktop/FULL STACK PROJECT/url-shortener-microservice/frontend/src/components/UrlForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n/**\r\n * A simple form with up to 5 rows.\r\n * Each row: longUrl, validity (minutes), shortcode (optional)\r\n *\r\n * IMPORTANT: Do NOT implement shortening on the client. Use the backend API at POST /shorturls.\r\n *\r\n * TODO: Hook this up to services/api.js to call backend. On success call props.onSuccess([...results])\r\n */\r\n\r\nexport default function UrlForm({ onSuccess }) {\r\n  const initialRows = Array.from({ length: 5 }, () => ({ url: '', validity: '', shortcode: '' }));\r\n  const [rows, setRows] = useState(initialRows);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function handleChange(index, field, value) {\r\n    const copy = [...rows];\r\n    copy[index][field] = value;\r\n    setRows(copy);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      // TODO: Validate client-side each row (use validators.js)\r\n      // TODO: send only filled rows to backend via services/api.js\r\n      // After successful responses, call onSuccess([...])\r\n      onSuccess([]); // placeholder: pass actual results after implementing\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {rows.map((r, i) => (\r\n        <div key={i} style={{ marginBottom: 8 }}>\r\n          <input\r\n            placeholder=\"Long URL\"\r\n            value={r.url}\r\n            onChange={(e) => handleChange(i, 'url', e.target.value)}\r\n            style={{ width: '50%' }}\r\n          />\r\n          <input\r\n            placeholder=\"validity (minutes)\"\r\n            value={r.validity}\r\n            onChange={(e) => handleChange(i, 'validity', e.target.value)}\r\n            style={{ width: 120, marginLeft: 8 }}\r\n          />\r\n          <input\r\n            placeholder=\"preferred shortcode (optional)\"\r\n            value={r.shortcode}\r\n            onChange={(e) => handleChange(i, 'shortcode', e.target.value)}\r\n            style={{ width: 160, marginLeft: 8 }}\r\n          />\r\n        </div>\r\n      ))}\r\n      <button type=\"submit\" disabled={loading}>Shorten</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}